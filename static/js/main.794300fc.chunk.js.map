{"version":3,"sources":["Components/Header.js","helper.js","Components/Formulario.js","Components/Resumen.js","Components/Resultado.js","Components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["incremento","ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Buttom","button","Error","Formulario","guardarResumen","guardarCargando","useState","error","guardarError","marca","year","plan","datos","guardarDatos","handleChange","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","diferenciaYear","diferenciaMarca","parseFloat","diferenciaPlan","toFixed","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","cargando","Mensaje","p","Resultado","TransitionGroup","component","className","CSSTransition","key","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.794300fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`\r\nconst Header = ({ titulo }) => {\r\n    return (\r\n        <>\r\n            <ContenedorHeader>\r\n                <TextoHeader>{titulo}</TextoHeader>\r\n            </ContenedorHeader>\r\n        </>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","let incremento\r\n//Resta un año al año actual\r\nexport const diferenciaYear = year => {\r\n    return new Date().getFullYear() - year\r\n}\r\n\r\n//calcula total a pagar segun la marca\r\nexport const diferenciaMarca = marca => {\r\n    switch (marca) {\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\n//Calcula diferencia de plan\r\n\r\nexport const diferenciaPlan = plan => {\r\n\r\n    return ( plan === 'basico' ? incremento = 1.20 : incremento = 1.50)\r\n}\r\n\r\nexport const primeraMayuscula = texto =>{\r\n    return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n}","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    diferenciaYear,\r\n    diferenciaMarca,\r\n    diferenciaPlan\r\n} from 'helper';\r\n\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    --webkit-appearance: none;\r\n`;\r\nconst InputRadio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\nconst Buttom = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .6s;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        background-color: #26C6DA;\r\n        cursor: pointer;\r\n    }\r\n`;\r\nconst Error = styled.div`\r\n    background-color: red ;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\n\r\nconst Formulario = ({ guardarResumen, guardarCargando }) => {\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: '',\r\n\r\n    });\r\n\r\n    const { marca, year, plan } = datos\r\n\r\n    const handleChange = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            guardarError(true);\r\n            return\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        //Valor inicial\r\n        let resultado = 2000;\r\n\r\n        //optener diferencia de precio por años\r\n        const diferencia = diferenciaYear(year);\r\n        resultado -= ((diferencia * 3) * resultado) / 100;\r\n\r\n        //Asiatico 5%\r\n        //Americano 15%\r\n        //Europeo 30%\r\n        resultado = diferenciaMarca(marca) * resultado;\r\n\r\n        //Basico 20%\r\n        //Completo 50%\r\n        resultado = parseFloat(diferenciaPlan(plan) * resultado).toFixed(2);\r\n\r\n        //Valor total\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n            guardarCargando(false);\r\n            guardarResumen({\r\n                cotizacion: resultado,\r\n                datos\r\n            });\r\n        }, 3000);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n            <Campo>\r\n                <Label>Marca </Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"\">--- Seleccione ---</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={handleChange}\r\n                >\r\n                    <option value=\"\">--- Seleccione ---</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan === \"basico\"}\r\n                    onChange={handleChange}\r\n                /> Básico\r\n\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan === \"completo\"}\r\n                    onChange={handleChange}\r\n                /> Completo\r\n            </Campo>\r\n            <Buttom\r\n                type=\"submit\"\r\n            >\r\n                Cotizar\r\n            </Buttom>\r\n        </form>\r\n    )\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { primeraMayuscula } from 'helper';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`\r\n\r\nconst Resumen = ({ datos, cargando }) => {\r\n\r\n    const { marca, year, plan } = datos\r\n\r\n    if (marca === '' || year === '' || plan === '') return null;\r\n    if (cargando === true) return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen Cotización</h2>\r\n            <ul>\r\n                <li>Marca: {primeraMayuscula(marca)}</li>\r\n                <li>Año: {primeraMayuscula(year)}</li>\r\n                <li>Plan: {primeraMayuscula(plan)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    )\r\n}\r\n\r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired,\r\n    cargando: PropTypes.bool.isRequired\r\n}\r\nexport default Resumen;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Mensaje = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    font-weight: bold;\r\n    margin: 0;\r\n    text-align: center;\r\n`\r\n\r\n\r\nconst Resultado = ({ cotizacion, cargando }) => {\r\n\r\n    if (cotizacion === 0) return null;\r\n    if (cargando === true) return null\r\n\r\n    return (\r\n        <>\r\n            <TransitionGroup\r\n                component=\"p\"\r\n                className=\"resultado\"\r\n            >\r\n                <CSSTransition\r\n                    key={cotizacion}\r\n                    classNames=\"resultado\"\r\n                    timeout={{ enter: 500, exit: 500 }}\r\n                >\r\n                    <Mensaje><p>Total a pagar: {cotizacion}</p></Mensaje>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired,\r\n    cargando: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Spinner = ({ cargando }) => {\r\n\r\n    if (cargando === false) return null\r\n\r\n    return (\r\n        <>\r\n            <div className=\"spinner\">\r\n                <div className=\"dot1\"></div>\r\n                <div className=\"dot2\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nSpinner.propTypes = {\r\n    cargando: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Spinner;","import React, { useState } from 'react';\nimport Header from 'Components/Header';\nimport Formulario from 'Components/Formulario';\nimport styled from '@emotion/styled';\nimport Resumen from 'Components/Resumen';\nimport Resultado from 'Components/Resultado'\nimport Spinner from 'Components/Spinner'\n\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`\n\nfunction App() {\n\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  const { datos, cotizacion } = resumen;\n\n\n  return (\n    <Contenedor>\n      <Header\n        titulo=\"Cotizador Seguros\"\n      />\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n        <Spinner\n          cargando={cargando}\n        />\n        <Resumen\n          datos={datos}\n          cargando={cargando}\n        />\n        <Resultado\n          cotizacion={cotizacion}\n          cargando={cargando}\n        />\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}